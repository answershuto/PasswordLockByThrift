#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from mythrift import passwordLock
from mythrift.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string connectServer(string strDevCode)'
  print '  void disconnectServer(string Session)'
  print '  void keepAlive(string Session)'
  print '  void inputPasswd(string Session, i32 iLockType, string strPassword)'
  print '  void ResetPasswd(string strDevCode, i32 iLockType, string strPassword)'
  print '  void modifyPasswd(string strOldPasswd, string strNewPasswd, i32 iLockType)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = passwordLock.Client(protocol)
transport.open()

if cmd == 'connectServer':
  if len(args) != 1:
    print 'connectServer requires 1 args'
    sys.exit(1)
  pp.pprint(client.connectServer(args[0],))

elif cmd == 'disconnectServer':
  if len(args) != 1:
    print 'disconnectServer requires 1 args'
    sys.exit(1)
  pp.pprint(client.disconnectServer(args[0],))

elif cmd == 'keepAlive':
  if len(args) != 1:
    print 'keepAlive requires 1 args'
    sys.exit(1)
  pp.pprint(client.keepAlive(args[0],))

elif cmd == 'inputPasswd':
  if len(args) != 3:
    print 'inputPasswd requires 3 args'
    sys.exit(1)
  pp.pprint(client.inputPasswd(args[0],eval(args[1]),args[2],))

elif cmd == 'ResetPasswd':
  if len(args) != 3:
    print 'ResetPasswd requires 3 args'
    sys.exit(1)
  pp.pprint(client.ResetPasswd(args[0],eval(args[1]),args[2],))

elif cmd == 'modifyPasswd':
  if len(args) != 3:
    print 'modifyPasswd requires 3 args'
    sys.exit(1)
  pp.pprint(client.modifyPasswd(args[0],args[1],eval(args[2]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
