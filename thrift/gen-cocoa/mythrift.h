/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


enum AirExceptionType {
  AirExceptionType_PASSWD_EXCEPTION = 0,
  AirExceptionType_USER_DIONLINE = 1
};

@interface AirException : NSException <TBase, NSCoding> {
  int __type;
  int64_t __errorCode;
  NSString * __errorMessage;
  NSString * __debugMessage;

  BOOL __type_isset;
  BOOL __errorCode_isset;
  BOOL __errorMessage_isset;
  BOOL __debugMessage_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, getter=errorCode, setter=setErrorCode:) int64_t errorCode;
@property (nonatomic, retain, getter=errorMessage, setter=setErrorMessage:) NSString * errorMessage;
@property (nonatomic, retain, getter=debugMessage, setter=setDebugMessage:) NSString * debugMessage;
#endif

- (id) init;
- (id) initWithType: (int) type errorCode: (int64_t) errorCode errorMessage: (NSString *) errorMessage debugMessage: (NSString *) debugMessage;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) type;
- (void) setType: (int) type;
#endif
- (BOOL) typeIsSet;

#if !__has_feature(objc_arc)
- (int64_t) errorCode;
- (void) setErrorCode: (int64_t) errorCode;
#endif
- (BOOL) errorCodeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) errorMessage;
- (void) setErrorMessage: (NSString *) errorMessage;
#endif
- (BOOL) errorMessageIsSet;

#if !__has_feature(objc_arc)
- (NSString *) debugMessage;
- (void) setDebugMessage: (NSString *) debugMessage;
#endif
- (BOOL) debugMessageIsSet;

@end

@protocol passwordLock <NSObject>
- (NSString *) connectServer: (NSString *) strDevCode;  // throws AirException *, TException
- (void) disconnectServer: (NSString *) Session;  // throws AirException *, TException
- (void) keepAlive: (NSString *) Session;  // throws AirException *, TException
- (void) inputPasswd: (NSString *) Session iLockType: (int32_t) iLockType strPassword: (NSString *) strPassword;  // throws AirException *, TException
- (void) ResetPasswd: (NSString *) strDevCode iLockType: (int32_t) iLockType strPassword: (NSString *) strPassword;  // throws AirException *, TException
- (void) modifyPasswd: (NSString *) strOldPasswd strNewPasswd: (NSString *) strNewPasswd iLockType: (int32_t) iLockType;  // throws AirException *, TException
@end

@interface passwordLockClient : NSObject <passwordLock> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface passwordLockProcessor : NSObject <TProcessor> {
  id <passwordLock> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithpasswordLock: (id <passwordLock>) service;
- (id<passwordLock>) service;
@end

@interface mythriftConstants : NSObject {
}
@end
