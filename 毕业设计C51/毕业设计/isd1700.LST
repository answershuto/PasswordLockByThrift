C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ISD1700
OBJECT MODULE PLACED IN isd1700.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE isd1700.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //#pragma src
   2          #include "reg51.h"
   3          #include "ISD1700.H"
   4          #include "sound.h"
   5          #define  uchar unsigned char 
   6          #define  uint  unsigned int
   7          
   8          sbit ISD_SS=P2^7;
   9          sbit ISD_MISO=P2^3;
  10          sbit ISD_MOSI=P2^5;
  11          sbit ISD_SCLK=P2^6;
  12          
  13          
  14          bit  re_fig;
  15          uchar data ISD_COMM_RAM[7];
  16          uchar data ISD_COMM_RAM_C[7];
  17          uchar data *isd_comm_ptr;
  18          uchar data *back_data_ptr;
  19          
  20          void  init(void);
  21          static void  delay(int x);
  22          void  comm_sate(void);
  23          void  rest_isd_comm_ptr(void);
  24          uchar T_R_comm_byte( uchar comm_data );
  25          void isd1700_par2_comm(uchar comm_par, uint data_par);
  26          void isd1700_Npar_comm(uchar comm_par,comm_byte_count); //no parameter comm
  27          void isd1700_7byte_comm(uchar comm_par, uint star_addr, uint end_addr);
  28          
  29          void  spi_pu (void);
  30          void  spi_stop (void);
  31          void  spi_Rest ( void );
  32          void  spi_CLR_INT(void);
  33          void  spi_RD_STAUS(void);
  34          void  spi_RD_play_ptr(void);
  35          void  spi_pd(void);
  36          void  spi_RD_rec_ptr(void);
  37          void  spi_devid(void);
  38          void  spi_play(void);
  39          void  spi_rec (void);
  40          void  spi_erase (void);
  41          void  spi_G_ERASE (void);
  42          void  spi_rd_apc(void);
  43          void  spi_wr_apc1 (void);
  44          void  spi_wr_apc2 (void);
  45          void  spi_wr_nvcfg (void);
  46          void  spi_ld_nvcfg (void);
  47          void  spi_fwd (void);
  48          void  spi_chk_mem(void);
  49          void  spi_CurrRowAddr(void);
  50          
  51          void  seril_back_sate(uchar byte_number);
  52          void  spi_set_opt(uchar spi_set_comm);
  53          
  54          //串口通信接口函数
  55          void  comm_sate(void)
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 2   

  56                {
  57   1              uchar sate_temp;
  58   1                      uint  apc_temp;         
  59   1                  if(RI)                                      //接收到命令
  60   1                        { sate_temp=SBUF;             //下面根据不同的命令执行不同的函数
  61   2                          
  62   2                              if(sate_temp==0x09)
  63   2                    { spi_devid();}
  64   2                    
  65   2                  if(sate_temp==0x44)
  66   2                                {spi_rd_apc();}
  67   2      
  68   2                  if(sate_temp==0x40)
  69   2                                {spi_play();}
  70   2                              
  71   2                                if(sate_temp==0x04)
  72   2                                {spi_CLR_INT();}
  73   2      
  74   2                                if(sate_temp==0x05)
  75   2                                {spi_RD_STAUS();}
  76   2      
  77   2                                if(sate_temp==0x43)
  78   2                                { spi_G_ERASE();}
  79   2      
  80   2                    if(sate_temp==0x01)
  81   2                    { spi_pu ();}
  82   2                     
  83   2                                if(sate_temp==0x02)
  84   2                    { spi_stop();}
  85   2                    
  86   2                                if(sate_temp==0x03)
  87   2                    { spi_Rest ();}
  88   2                                
  89   2      
  90   2                  if(sate_temp==0x06)
  91   2                                {spi_RD_play_ptr();}
  92   2      
  93   2                  if(sate_temp==0x07)
  94   2                                {spi_pd();}
  95   2      
  96   2                                if(sate_temp==0x08)
  97   2                                { spi_RD_rec_ptr();}
  98   2      
  99   2                                if(sate_temp==0x41)
 100   2                                { spi_rec();}
 101   2      
 102   2      
 103   2                                if(sate_temp==0x42)
 104   2                    { spi_erase();}
 105   2                    
 106   2                  if(sate_temp==0x45)
 107   2                                {spi_wr_apc1 ();}
 108   2      
 109   2                  if(sate_temp==0x65)
 110   2                                { spi_wr_apc2 ();}
 111   2                              
 112   2                                if(sate_temp==0x46)
 113   2                                { spi_wr_nvcfg ();}
 114   2      
 115   2                                if(sate_temp==0x47)
 116   2                                { spi_ld_nvcfg ();}
 117   2      
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 3   

 118   2                                if(sate_temp==0x48)
 119   2                                { spi_fwd ();}
 120   2      
 121   2                                if(sate_temp==0x49)
 122   2                    { spi_chk_mem();}
 123   2      
 124   2                                if(sate_temp==0x60)
 125   2                      { spi_CurrRowAddr();}
 126   2                    
 127   2                  if(sate_temp==0x80)
 128   2                                {   
 129   3                      spi_set_opt(ISD1700_SET_PLAY|ISD_LED); 
 130   3                                      //spi_set_opt(ISD1700_SET_PLAY);
 131   3                                }
 132   2      
 133   2                  if(sate_temp==0x81)
 134   2                                {
 135   3                                  spi_set_opt(ISD1700_SET_REC|ISD_LED);
 136   3                                      //spi_set_opt(ISD1700_SET_REC);
 137   3                      ISD_COMM_RAM_C[0]=ISD1700_SET_REC ;
 138   3                      seril_back_sate(1);
 139   3                                }
 140   2                              
 141   2                                if(sate_temp==0x82)
 142   2                                {
 143   3                                  spi_set_opt(ISD1700_SET_ERASE|ISD_LED);
 144   3                                      //spi_set_opt(ISD1700_SET_ERASE);
 145   3                                }
 146   2      
 147   2                    if(sate_temp==ISD1700_WR_APC2)
 148   2                             {  
 149   3                                    RI=0;
 150   3                                        while(!RI);
 151   3                        apc_temp=SBUF;
 152   3                                        apc_temp=apc_temp<<8;
 153   3                                        RI=0;
 154   3                        while(!RI);
 155   3                        apc_temp|=SBUF;
 156   3                                        RI=0;
 157   3                        ISD_SS=0;
 158   3                        isd1700_par2_comm(ISD1700_WR_APC2,apc_temp);
 159   3                        ISD_SS=1;
 160   3                     }
 161   2      
 162   2                          RI=0;                  
 163   2                        }
 164   1                      if(re_fig)
 165   1                        { 
 166   2                          rest_isd_comm_ptr();
 167   2                              sate_temp=0;
 168   2                              do{
 169   3                              SBUF=*back_data_ptr++;
 170   3                              while(!TI);
 171   3                                  TI=0;
 172   3                                 }while(++sate_temp<=2);
 173   2                  re_fig=0;
 174   2                        }
 175   1                 }
 176          
 177          
 178          
 179          /******************************************************************/
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 4   

 180          /*******以下为ISD各子功能函数，详细请查阅ISD语音芯片数据手册******/
 181          
 182          //设置函数
 183          void  spi_set_opt(uchar spi_set_comm)
 184                {   
 185   1                    uint  start_addr,end_addr;
 186   1                RI=0;
 187   1                        while(!RI);
 188   1                start_addr=SBUF;
 189   1                        start_addr=start_addr<<8;
 190   1                        RI=0;
 191   1                while(!RI);
 192   1                start_addr|=SBUF;
 193   1                    RI=0;
 194   1      
 195   1                        while(!RI);
 196   1                end_addr=SBUF;
 197   1                        end_addr=start_addr<<8;
 198   1                        RI=0;
 199   1                while(!RI);
 200   1                end_addr|=SBUF;
 201   1                        RI=0;
 202   1                        
 203   1                ISD_SS=0;
 204   1                isd1700_7byte_comm(spi_set_comm, start_addr, end_addr);
 205   1                ISD_SS=1;  
 206   1              }                         
 207          
 208          //器件上电
 209          void  spi_pu (void)
 210                {  
 211   1                       ISD_SS=0;
 212   1               isd1700_Npar_comm(ISD1700_PU,2);    
 213   1                       ISD_SS=1;
 214   1            }
 215          
 216          //器件停止
 217          void  spi_stop (void)
 218                {  
 219   1                       ISD_SS=0;
 220   1               isd1700_Npar_comm(ISD1700_STOP,2);     
 221   1                       ISD_SS=1;
 222   1               ISD_COMM_RAM_C[0]=ISD1700_STOP ;
 223   1               seril_back_sate(1);
 224   1            }
 225          //器件复位
 226          void  spi_Rest (void)
 227                 {
 228   1               ISD_SS=0;
 229   1               isd1700_Npar_comm(ISD1700_REST,2);    
 230   1                       ISD_SS=1;
 231   1                 }
 232          
 233          //清楚EOM标志
 234          void  spi_CLR_INT(void) 
 235                 {   
 236   1                  ISD_SS=0;
 237   1                  isd1700_Npar_comm(ISD1700_CLR_INT,2);     
 238   1                          ISD_SS=1;
 239   1                   }
 240          
 241          //器件状态
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 5   

 242          void  spi_RD_STAUS(void)
 243                {     uchar i;
 244   1                  ISD_SS=0;
 245   1                  isd1700_Npar_comm(ISD1700_RD_STAUS,3);   
 246   1                          ISD_SS=1;
 247   1                  i=ISD_COMM_RAM_C[1];                    
 248   1                              //j=ISD_COMM_RAM_C[2];
 249   1                  ISD_COMM_RAM_C[1]=ISD_COMM_RAM_C[0];   
 250   1                  ISD_COMM_RAM_C[0]=i;
 251   1                  seril_back_sate(3);
 252   1             }
 253          
 254          //当前地址
 255          void  spi_CurrRowAddr(void)
 256                 {    uchar i;
 257   1                  ISD_SS=0;
 258   1                  isd1700_Npar_comm(ISD1700_RD_STAUS,3); 
 259   1                          ISD_SS=1;
 260   1                              i=ISD_COMM_RAM_C[1];
 261   1                  ISD_COMM_RAM_C[1]=ISD_COMM_RAM_C[0]>>5|ISD_COMM_RAM_C[1]<<3;  
 262   1                  ISD_COMM_RAM_C[0]= i >>5;   
 263   1                  seril_back_sate(3);
 264   1                 }
 265          
 266          //读播放地址
 267          void  spi_RD_play_ptr(void)
 268                 {    uchar i;
 269   1                  ISD_SS=0;
 270   1                  isd1700_Npar_comm(ISD1700_RD_PLAY_PTR,4);      
 271   1                          ISD_SS=1;                   
 272   1                              i=ISD_COMM_RAM_C[3]&0x03;               
 273   1                  ISD_COMM_RAM_C[3]=ISD_COMM_RAM_C[2];    
 274   1                              ISD_COMM_RAM_C[2]=i;
 275   1                              seril_back_sate(4);
 276   1                 }
 277          
 278          //器件掉电
 279          void  spi_pd(void)
 280                 {
 281   1                      ISD_SS=0;
 282   1                  isd1700_Npar_comm(ISD1700_PD,2);
 283   1                              ISD_SS=1;
 284   1                 }
 285          
 286          //读录音地址
 287          void  spi_RD_rec_ptr(void)
 288                 {    uchar i;
 289   1                  ISD_SS=0;
 290   1                  isd1700_Npar_comm(ISD1700_RD_REC_PTR,4);      
 291   1                          ISD_SS=1;
 292   1                              i=ISD_COMM_RAM_C[3]&0x03;                 
 293   1                  ISD_COMM_RAM_C[3]=ISD_COMM_RAM_C[2]; 
 294   1                              ISD_COMM_RAM_C[2]=i;
 295   1                              seril_back_sate(4);
 296   1                 }
 297          
 298          //器件ID
 299          void  spi_devid(void)
 300                {
 301   1                  ISD_SS=0;
 302   1                  isd1700_Npar_comm(ISD1700_DEVID,3);   
 303   1                          ISD_SS=1;
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 6   

 304   1                  ISD_COMM_RAM_C[2]=ISD_COMM_RAM_C[2]&0xf8; 
 305   1                              seril_back_sate(3);
 306   1             }
 307          
 308          //播放当前
 309          void  spi_play(void)
 310                 {   
 311   1                  ISD_SS=0;
 312   1                  isd1700_Npar_comm(ISD1700_PLAY|ISD_LED,2);    
 313   1                          ISD_SS=1;
 314   1               }
 315          
 316          
 317          //开始录音
 318          void  spi_rec (void)
 319                 {
 320   1                  ISD_SS=0;
 321   1                  isd1700_Npar_comm(ISD1700_REC|ISD_LED,2);      
 322   1                          ISD_SS=1;
 323   1                  ISD_COMM_RAM_C[0]=ISD1700_REC ;
 324   1                  seril_back_sate(1);
 325   1                 }
 326          
 327          //擦除当前
 328          void  spi_erase (void)
 329                 {
 330   1                  ISD_SS=0;
 331   1                  isd1700_Npar_comm(ISD1700_ERASE|ISD_LED,2);      
 332   1                          ISD_SS=1;
 333   1                 }
 334          
 335          //擦除全部
 336          void  spi_G_ERASE (void) 
 337                 { 
 338   1                  ISD_SS=0;
 339   1                  isd1700_Npar_comm(ISD1700_G_ERASE|ISD_LED,2);    
 340   1                          ISD_SS=1;
 341   1                 }
 342          
 343          //返回状态寄存器信息
 344          void  spi_rd_apc(void)
 345                { 
 346   1                  ISD_SS=0;
 347   1                  isd1700_Npar_comm(ISD1700_RD_APC,4);
 348   1                          ISD_SS=1;
 349   1                              seril_back_sate(4);
 350   1             }
 351          
 352          //写寄存器
 353          void  spi_wr_apc1 (void)
 354                {
 355   1            }
 356          void  spi_wr_apc2 (void)
 357                {
 358   1                   ISD_SS=0;
 359   1                   isd1700_par2_comm(ISD1700_WR_APC2, 0x0400);
 360   1                   ISD_SS=1;
 361   1            }
 362          
 363          //将APC内容写入NVCFG
 364          void  spi_wr_nvcfg (void)
 365                {
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 7   

 366   1                  ISD_SS=0;
 367   1                  isd1700_Npar_comm(ISD1700_WR_NVCFG,2);      
 368   1                          ISD_SS=1;
 369   1                }
 370          
 371          ////将NVCFG内容写入APC
 372          void  spi_ld_nvcfg (void)
 373                {
 374   1                      ISD_SS=0;
 375   1                  isd1700_Npar_comm(ISD1700_LD_NVCFG ,2);      
 376   1                          ISD_SS=1;
 377   1            }
 378          
 379          //下一段
 380          void  spi_fwd (void)
 381                  {
 382   1                  ISD_SS=0;
 383   1                  isd1700_Npar_comm(ISD1700_FWD,2);      
 384   1                          ISD_SS=1;
 385   1                      }
 386          
 387          //检查环状存储体
 388          void  spi_chk_mem(void)
 389                  {
 390   1                          ISD_SS=0;
 391   1                  isd1700_Npar_comm(ISD1700_CHK_MEM,2);      
 392   1                          ISD_SS=1;
 393   1                      }
 394          
 395          //状态返回
 396          void  seril_back_sate(uchar byte_number)
 397                  {
 398   1                        uchar sate_temp;
 399   1                rest_isd_comm_ptr();
 400   1                        sate_temp=0;
 401   1                        do{
 402   2                              SBUF=*back_data_ptr++;
 403   2                              while(!TI);
 404   2                                  TI=0;
 405   2                               }while(++sate_temp<byte_number);
 406   1                      }
 407          
 408          //复位
 409          void rest_isd_comm_ptr(void)
 410                  {
 411   1                   isd_comm_ptr=ISD_COMM_RAM;
 412   1               back_data_ptr=ISD_COMM_RAM_C; 
 413   1              }
 414          
 415          //无参数命令
 416          void isd1700_Npar_comm (uchar comm_par,comm_byte_count)
 417                 {   
 418   1                   uchar i;
 419   1                       i=0;
 420   1                       ISD_COMM_RAM[0]=comm_par;
 421   1                       isd_comm_ptr=&ISD_COMM_RAM[1];
 422   1                       do{ 
 423   2                           *isd_comm_ptr++=NULL;
 424   2                          }while(++i<comm_byte_count-1);
 425   1      
 426   1                       rest_isd_comm_ptr();            
 427   1               i=0;
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 8   

 428   1               do{
 429   2                   *back_data_ptr++=T_R_comm_byte(*isd_comm_ptr++);
 430   2                   i++;
 431   2                 }while(i<comm_byte_count);
 432   1                  }
 433          //2个字节命令
 434          void isd1700_par2_comm(uchar comm_par, uint data_par)
 435                  {
 436   1               uchar i;
 437   1                   ISD_COMM_RAM[0]=comm_par;
 438   1               ISD_COMM_RAM[1]=data_par;
 439   1               ISD_COMM_RAM[2]=data_par>>8;         
 440   1               rest_isd_comm_ptr();            
 441   1               i=0;
 442   1               do{
 443   2                   *back_data_ptr++=T_R_comm_byte(*isd_comm_ptr++);
 444   2                   i++;
 445   2                 }while(i<3);
 446   1              }
 447          
 448          //7个字节命令
 449          void isd1700_7byte_comm(uchar comm_par, uint star_addr, uint end_addr)
 450                 {
 451   1               uchar i;
 452   1                   ISD_COMM_RAM[0]=comm_par;
 453   1                       ISD_COMM_RAM[1]=NULL;
 454   1                       ISD_COMM_RAM[2]=star_addr;
 455   1               ISD_COMM_RAM[3]=star_addr>>8;
 456   1               ISD_COMM_RAM[4]=end_addr;
 457   1               ISD_COMM_RAM[5]=end_addr>>8;
 458   1               ISD_COMM_RAM[6]=NULL;
 459   1               rest_isd_comm_ptr();            
 460   1               i=0;
 461   1               do{
 462   2                   *back_data_ptr++=T_R_comm_byte(*isd_comm_ptr++);
 463   2                   i++;
 464   2                 }while(i<=7);
 465   1             }
 466          
 467          //SPI接口函数
 468          uchar T_R_comm_byte( uchar comm_data )
 469                {
 470   1               uchar bit_nuber;
 471   1                       uchar temp;
 472   1                       bit_nuber=0;
 473   1                       temp=0;
 474   1                       do{
 475   2                           ISD_SCLK=0;
 476   2                   delay(1);
 477   2                           if((comm_data>>bit_nuber&0x01)!=0) 
 478   2                      {ISD_MOSI=1;}
 479   2                   else
 480   2                                  {ISD_MOSI=0;}
 481   2                   if(ISD_MISO)
 482   2                                 {temp=(temp>>1)|0x80;}
 483   2                   else
 484   2                                 {temp=temp>>1;}
 485   2                   ISD_SCLK=1;
 486   2                   delay(1);
 487   2                               
 488   2                              }while(++bit_nuber<=7);
 489   1               ISD_MOSI=0;
C51 COMPILER V9.00   ISD1700                                                               05/25/2015 22:25:35 PAGE 9   

 490   1                        return (temp);
 491   1                }
 492          
 493          //短延时
 494          static void delay(int x)
 495                {  
 496   1                   uchar i;
 497   1                       for(; x>=1; x--)
 498   1                        {for(;i<=20;i++);}
 499   1            }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1027    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
